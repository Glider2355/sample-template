name: PR自動作成

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create_pr:
    if: ${{ startsWith(github.event.comment.body, 'create-pr ') }}
    runs-on: ubuntu-latest
    steps:
      - name: issueのコメントからブランチ名を抽出する
        id: extract_branch
        run: |
          branch_name=$(echo '${{ github.event.comment.body }}' | sed 's/^create-pr //')
          branch_name=$(echo "$branch_name" | xargs)
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: デフォルトブランチを使用する
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: ブランチを作成
        run: |
          git checkout -b ${{ steps.extract_branch.outputs.branch_name }}

      - name: issueの作成者で認証
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      - name: 空コミット
        run: |
          git commit --allow-empty -m "Empty commit for PR linked to Issue #${{ github.event.issue.number }}"

      - name: pushする
        run: |
          git push origin ${{ steps.extract_branch.outputs.branch_name }}

      - name: プルリクエストを作成する
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = '${{ steps.extract_branch.outputs.branch_name }}';
            const issueNumber = ${{ github.event.issue.number }};
            const prBody = `Closes #${issueNumber}`;
            const baseBranch = '${{ github.event.repository.default_branch }}';

            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
            });

            const prTitle = issue.title;

            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: prTitle,
              head: branchName,
              base: baseBranch,
              body: prBody
            });
            console.log(`Created PR #${pullRequest.number}`);

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `プルリクエストが作成されました: #${pullRequest.html_url}`
            });
